<div
class="w-[512px]"
>
    <div class="flex flex-wrap justify-between gap-3 p-4">
        <div class="flex min-w-72 flex-col gap-3">
        <p
            id="planSummary"
            class="text-[#0e1b19] tracking-light text-[32px] font-bold leading-tight"
        >
            Your daily nutritional needs: 0 cals, 0g carbs, 0g protein, 0g
            fat
        </p>
        <p class="text-[#4f968f] text-sm font-normal leading-normal">
            Fulfill your calculated nutritional requirements with a
            detailed food selection
        </p>
        </div>
    </div>

    <!-- Day Switcher -->
    <div class="pb-3">
        <div class="flex border-b border-[#d0e6e4] px-4 gap-8">
        <a
            class="day-link border-b-[3px] border-b-[#1ce3cf] text-[#0e1b19] pb-3 pt-4"
            data-day="monday"
            href="#"
        >
            Mon
        </a>
        <a
            class="day-link border-b-[3px] border-b-transparent text-[#4f968f] pb-3 pt-4"
            data-day="tuesday"
            href="#"
        >
            Tue
        </a>
        <a
            class="day-link border-b-[3px] border-b-transparent text-[#4f968f] pb-3 pt-4"
            data-day="wednesday"
            href="#"
        >
            Wed
        </a>
        <a
            class="day-link border-b-[3px] border-b-transparent text-[#4f968f] pb-3 pt-4"
            data-day="thursday"
            href="#"
        >
            Thu
        </a>
        <a
            class="day-link border-b-[3px] border-b-transparent text-[#4f968f] pb-3 pt-4"
            data-day="friday"
            href="#"
        >
            Fri
        </a>
        <a
            class="day-link border-b-[3px] border-b-transparent text-[#4f968f] pb-3 pt-4"
            data-day="saturday"
            href="#"
        >
            Sat
        </a>
        <a
            class="day-link border-b-[3px] border-b-transparent text-[#4f968f] pb-3 pt-4"
            data-day="sunday"
            href="#"
        >
            Sun
        </a>
        </div>
    </div>

    <!-- Breakfast -->
    <h3 class="text-lg font-bold text-[#0e1b19] px-4 pt-4 pb-2">
        Breakfast
    </h3>
    <div class="px-4">
        <div class="flex mb-2">
        <input
            id="breakfastSearchInput"
            placeholder="Search breakfast"
            class="form-input flex-1 border-none bg-[#e8f3f2] px-4 text-base"
        />
        <button
            class="px-4 bg-[#1ce3cf] text-[#0e1b19] font-bold"
            onclick="searchFoods('breakfast')"
        >
            Search
        </button>
        </div>
        <div id="breakfastSearchResults" class="mb-2"></div>
        <div id="breakfastChosen" class="bg-white rounded p-2"></div>
    </div>

    <!-- Lunch -->
    <h3 class="text-lg font-bold text-[#0e1b19] px-4 pt-4 pb-2">
        Lunch
    </h3>
    <div class="px-4">
        <div class="flex mb-2">
        <input
            id="lunchSearchInput"
            placeholder="Search lunch"
            class="form-input flex-1 border-none bg-[#e8f3f2] px-4 text-base"
        />
        <button
            class="px-4 bg-[#1ce3cf] text-[#0e1b19] font-bold"
            onclick="searchFoods('lunch')"
        >
            Search
        </button>
        </div>
        <div id="lunchSearchResults" class="mb-2"></div>
        <div id="lunchChosen" class="bg-white rounded p-2"></div>
    </div>

    <!-- Dinner -->
    <h3 class="text-lg font-bold text-[#0e1b19] px-4 pt-4 pb-2">
        Dinner
    </h3>
    <div class="px-4">
        <div class="flex mb-2">
        <input
            id="dinnerSearchInput"
            placeholder="Search dinner"
            class="form-input flex-1 border-none bg-[#e8f3f2] px-4 text-base"
        />
        <button
            class="px-4 bg-[#1ce3cf] text-[#0e1b19] font-bold"
            onclick="searchFoods('dinner')"
        >
            Search
        </button>
        </div>
        <div id="dinnerSearchResults" class="mb-2"></div>
        <div id="dinnerChosen" class="bg-white rounded p-2"></div>
    </div>

    <div class="flex px-4 py-3 justify-center">
        <button
        onclick="finalizePlan()"
        class="flex items-center justify-center rounded-full h-12 px-5 bg-[#1ce3cf] text-[#0e1b19] text-base font-bold leading-normal whitespace-nowrap"
        >
        Finalize and Create Your Plan
        </button>
    </div>
</div>

<script>
    const weeklyPlan = {
    monday: { breakfast: [], lunch: [], dinner: [] },
    tuesday: { breakfast: [], lunch: [], dinner: [] },
    wednesday: { breakfast: [], lunch: [], dinner: [] },
    thursday: { breakfast: [], lunch: [], dinner: [] },
    friday: { breakfast: [], lunch: [], dinner: [] },
    saturday: { breakfast: [], lunch: [], dinner: [] },
    sunday: { breakfast: [], lunch: [], dinner: [] },
    };

    let activeDay = "monday";

    document.addEventListener("DOMContentLoaded", async () => {
    try {
        const res = await fetch("/api/current-user");
        if (res.ok) {
        const user = await res.json();
        const c = user.dailyCalorieGoal || 0;
        const carbs = user.macros?.carbs || 0;
        const p = user.macros?.protein || 0;
        const f = user.macros?.fat || 0;
        document.getElementById(
            "planSummary"
        ).textContent = `Your daily nutritional needs: ${c} cals, ${carbs}g carbs, ${p}g protein, ${f}g fat`;
        }
    } catch (err) {
        console.warn("Could not fetch user macros:", err);
    }

    const dayLinks = document.querySelectorAll(".day-link");
    dayLinks.forEach((link) => {
        link.addEventListener("click", (e) => {
        e.preventDefault();
        setActiveDay(link.getAttribute("data-day"));
        });
    });
    setActiveDay("monday");
    });

    function setActiveDay(dayName) {
    activeDay = dayName;
    const links = document.querySelectorAll(".day-link");
    links.forEach((lnk) => {
        lnk.classList.remove("border-b-[#1ce3cf]", "text-[#0e1b19]");
        lnk.classList.add("border-b-transparent", "text-[#4f968f]");
    });
    const activeLink = Array.from(links).find(
        (l) => l.getAttribute("data-day") === dayName
    );
    if (activeLink) {
        activeLink.classList.remove("border-b-transparent", "text-[#4f968f]");
        activeLink.classList.add("border-b-[#1ce3cf]", "text-[#0e1b19]");
    }
    renderChosenItems();
    }

    async function searchFoods(meal) {
    const inputId = meal + "SearchInput";
    const resultsId = meal + "SearchResults";
    const query =
        document.getElementById(inputId).value.trim() || "chicken";

    try {
        const resp = await fetch(
        `/api/foods?search=${encodeURIComponent(query)}`
        );
        if (!resp.ok) {
        console.warn("Food search failed:", resp.status);
        return;
        }
        const foods = await resp.json();
        renderSearchResults(foods, meal, resultsId);
    } catch (err) {
        console.error("Error searching foods:", err);
    }
    }

    function renderSearchResults(foods, meal, resultsId) {
    const container = document.getElementById(resultsId);
    container.innerHTML = "";
    if (!foods || foods.length === 0) {
        container.innerHTML = "<p>No results found.</p>";
        return;
    }
    foods.forEach((food) => {
        const cals = food.protein * 4 + food.fat * 9 + food.carbs * 4;
        const itemDiv = document.createElement("div");
        itemDiv.className =
        "flex items-center gap-4 bg-[#f8fbfb] min-h-[72px] py-2 border-b border-[#e8f3f2] px-4";
        itemDiv.innerHTML = `
        <div
            class="bg-center bg-no-repeat bg-cover rounded-lg w-14 h-14"
            style="background-image:url('${food.imageUrl}');"
        ></div>
        <div class="flex flex-col justify-center">
            <p class="text-[#0e1b19] text-base font-medium">${food.name}</p>
            <p class="text-[#4f968f] text-sm">
            ~${cals} cals, ${food.carbs}g carbs, ${food.protein}g protein, ${food.fat}g fat
            </p>
        </div>
        <button
            class="ml-auto mr-4 bg-[#1ce3cf] px-3 py-1 rounded-full text-[#0e1b19] font-bold"
        >Add</button>
        `;
        const addBtn = itemDiv.querySelector("button");
        addBtn.addEventListener("click", () => {
        weeklyPlan[activeDay][meal].push({
            name: food.name,
            calorie: cals,
            protein: food.protein,
            carb: food.carbs,
            fat: food.fat,
        });
        renderChosenItems();
        });
        container.appendChild(itemDiv);
    });
    }

    function renderChosenItems() {
    ["breakfast", "lunch", "dinner"].forEach((meal) => {
        const container = document.getElementById(meal + "Chosen");
        container.innerHTML = "";
        const items = weeklyPlan[activeDay][meal];
        if (!items || items.length === 0) {
        container.innerHTML = `<p class="text-[#4f968f] text-sm">No items added yet.</p>`;
        return;
        }
        items.forEach((it, idx) => {
        const row = document.createElement("div");
        row.className = "flex items-center justify-between border-b py-1";
        row.innerHTML = `
            <div>
            <p class="text-[#0e1b19] text-sm font-medium">${it.name}</p>
            <p class="text-[#4f968f] text-xs">
                ${it.calorie} cals, ${it.carb}g carbs, ${it.protein}g protein, ${it.fat}g fat
            </p>
            </div>
            <button class="text-red-500 text-xs underline">Remove</button>
        `;
        const removeBtn = row.querySelector("button");
        removeBtn.addEventListener("click", () => {
            weeklyPlan[activeDay][meal].splice(idx, 1);
            renderChosenItems();
        });
        container.appendChild(row);
        });
    });
    }

    async function finalizePlan() {
    try {
        const resp = await fetch("/api/finalizeplan", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ weeklyPlan }),
        });
        if (!resp.ok) {
        console.warn("Finalize plan failed:", resp.status);
        return;
        }
        const data = await resp.json();
        if (data.success) {
        alert("Plan saved successfully!");
        window.location.href = "/plan";
        }
    } catch (err) {
        console.error("Error finalizing plan:", err);
    }
    }
</script>